vendor_name = ModelSim
source_file = 1, /home/nvv/fpga_prg/c4/test_mem_file/mem_f.v
source_file = 1, /home/nvv/fpga_prg/c4/test_mem_file/db/mem_f.cbx.xml
design_name = mem_f
instance = comp, \led~output , led~output, mem_f, 1
instance = comp, \clock_50Mhz~input , clock_50Mhz~input, mem_f, 1
instance = comp, \clock_50Mhz~inputclkctrl , clock_50Mhz~inputclkctrl, mem_f, 1
instance = comp, \Mux25~0 , Mux25~0, mem_f, 1
instance = comp, \Add0~0 , Add0~0, mem_f, 1
instance = comp, \reset~input , reset~input, mem_f, 1
instance = comp, \timer[0] , timer[0], mem_f, 1
instance = comp, \Add0~2 , Add0~2, mem_f, 1
instance = comp, \timer[1] , timer[1], mem_f, 1
instance = comp, \Add0~4 , Add0~4, mem_f, 1
instance = comp, \timer[2] , timer[2], mem_f, 1
instance = comp, \Add0~6 , Add0~6, mem_f, 1
instance = comp, \timer[3] , timer[3], mem_f, 1
instance = comp, \Add0~8 , Add0~8, mem_f, 1
instance = comp, \timer[4] , timer[4], mem_f, 1
instance = comp, \Add0~10 , Add0~10, mem_f, 1
instance = comp, \timer[5] , timer[5], mem_f, 1
instance = comp, \Add0~12 , Add0~12, mem_f, 1
instance = comp, \timer[6] , timer[6], mem_f, 1
instance = comp, \Add0~14 , Add0~14, mem_f, 1
instance = comp, \timer[7] , timer[7], mem_f, 1
instance = comp, \Add0~16 , Add0~16, mem_f, 1
instance = comp, \timer~11 , timer~11, mem_f, 1
instance = comp, \timer[8] , timer[8], mem_f, 1
instance = comp, \Add0~18 , Add0~18, mem_f, 1
instance = comp, \timer[9] , timer[9], mem_f, 1
instance = comp, \Add0~20 , Add0~20, mem_f, 1
instance = comp, \timer[10] , timer[10], mem_f, 1
instance = comp, \Add0~22 , Add0~22, mem_f, 1
instance = comp, \timer[11] , timer[11], mem_f, 1
instance = comp, \Add0~24 , Add0~24, mem_f, 1
instance = comp, \timer[12] , timer[12], mem_f, 1
instance = comp, \Add0~26 , Add0~26, mem_f, 1
instance = comp, \timer~10 , timer~10, mem_f, 1
instance = comp, \timer[13] , timer[13], mem_f, 1
instance = comp, \Add0~28 , Add0~28, mem_f, 1
instance = comp, \timer~9 , timer~9, mem_f, 1
instance = comp, \timer[14] , timer[14], mem_f, 1
instance = comp, \Add0~30 , Add0~30, mem_f, 1
instance = comp, \timer~8 , timer~8, mem_f, 1
instance = comp, \timer[15] , timer[15], mem_f, 1
instance = comp, \Equal0~5 , Equal0~5, mem_f, 1
instance = comp, \Add0~32 , Add0~32, mem_f, 1
instance = comp, \timer~7 , timer~7, mem_f, 1
instance = comp, \timer[16] , timer[16], mem_f, 1
instance = comp, \Add0~34 , Add0~34, mem_f, 1
instance = comp, \timer[17] , timer[17], mem_f, 1
instance = comp, \Add0~36 , Add0~36, mem_f, 1
instance = comp, \timer~6 , timer~6, mem_f, 1
instance = comp, \timer[18] , timer[18], mem_f, 1
instance = comp, \Add0~38 , Add0~38, mem_f, 1
instance = comp, \timer[19] , timer[19], mem_f, 1
instance = comp, \Add0~40 , Add0~40, mem_f, 1
instance = comp, \timer~5 , timer~5, mem_f, 1
instance = comp, \timer[20] , timer[20], mem_f, 1
instance = comp, \Add0~42 , Add0~42, mem_f, 1
instance = comp, \timer~4 , timer~4, mem_f, 1
instance = comp, \timer[21] , timer[21], mem_f, 1
instance = comp, \Add0~44 , Add0~44, mem_f, 1
instance = comp, \timer~3 , timer~3, mem_f, 1
instance = comp, \timer[22] , timer[22], mem_f, 1
instance = comp, \Add0~46 , Add0~46, mem_f, 1
instance = comp, \timer~2 , timer~2, mem_f, 1
instance = comp, \timer[23] , timer[23], mem_f, 1
instance = comp, \Add0~48 , Add0~48, mem_f, 1
instance = comp, \timer~1 , timer~1, mem_f, 1
instance = comp, \timer[24] , timer[24], mem_f, 1
instance = comp, \Add0~50 , Add0~50, mem_f, 1
instance = comp, \timer[25] , timer[25], mem_f, 1
instance = comp, \Add0~52 , Add0~52, mem_f, 1
instance = comp, \timer~0 , timer~0, mem_f, 1
instance = comp, \timer[26] , timer[26], mem_f, 1
instance = comp, \Add0~54 , Add0~54, mem_f, 1
instance = comp, \timer[27] , timer[27], mem_f, 1
instance = comp, \Equal0~1 , Equal0~1, mem_f, 1
instance = comp, \Equal0~3 , Equal0~3, mem_f, 1
instance = comp, \Equal0~2 , Equal0~2, mem_f, 1
instance = comp, \Add0~56 , Add0~56, mem_f, 1
instance = comp, \timer[28] , timer[28], mem_f, 1
instance = comp, \Add0~58 , Add0~58, mem_f, 1
instance = comp, \timer[29] , timer[29], mem_f, 1
instance = comp, \Add0~60 , Add0~60, mem_f, 1
instance = comp, \timer[30] , timer[30], mem_f, 1
instance = comp, \Add0~62 , Add0~62, mem_f, 1
instance = comp, \timer[31] , timer[31], mem_f, 1
instance = comp, \Equal0~0 , Equal0~0, mem_f, 1
instance = comp, \Equal0~4 , Equal0~4, mem_f, 1
instance = comp, \Equal0~6 , Equal0~6, mem_f, 1
instance = comp, \Equal0~8 , Equal0~8, mem_f, 1
instance = comp, \Equal0~7 , Equal0~7, mem_f, 1
instance = comp, \Equal0~9 , Equal0~9, mem_f, 1
instance = comp, \Equal0~10 , Equal0~10, mem_f, 1
instance = comp, \counter_bit[1] , counter_bit[1], mem_f, 1
instance = comp, \Add2~0 , Add2~0, mem_f, 1
instance = comp, \counter_bit[2] , counter_bit[2], mem_f, 1
instance = comp, \counter_bit[3]~1 , counter_bit[3]~1, mem_f, 1
instance = comp, \counter_bit[3]~2 , counter_bit[3]~2, mem_f, 1
instance = comp, \counter_bit[3] , counter_bit[3], mem_f, 1
instance = comp, \counter_bit~0 , counter_bit~0, mem_f, 1
instance = comp, \counter_bit[0] , counter_bit[0], mem_f, 1
instance = comp, \Add1~0 , Add1~0, mem_f, 1
instance = comp, \Add1~4 , Add1~4, mem_f, 1
instance = comp, \Add1~6 , Add1~6, mem_f, 1
instance = comp, \counter_mem[3] , counter_mem[3], mem_f, 1
instance = comp, \Add1~8 , Add1~8, mem_f, 1
instance = comp, \counter_mem[4] , counter_mem[4], mem_f, 1
instance = comp, \Add1~10 , Add1~10, mem_f, 1
instance = comp, \counter_mem[5] , counter_mem[5], mem_f, 1
instance = comp, \counter_mem~0 , counter_mem~0, mem_f, 1
instance = comp, \counter_mem~1 , counter_mem~1, mem_f, 1
instance = comp, \counter_mem[0] , counter_mem[0], mem_f, 1
instance = comp, \Add1~2 , Add1~2, mem_f, 1
instance = comp, \counter_mem[1] , counter_mem[1], mem_f, 1
instance = comp, \counter_mem[2] , counter_mem[2], mem_f, 1
instance = comp, \Mux32~0 , Mux32~0, mem_f, 1
instance = comp, \Mux32~1 , Mux32~1, mem_f, 1
instance = comp, \Mux32~2 , Mux32~2, mem_f, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
